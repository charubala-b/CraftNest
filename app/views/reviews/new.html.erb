<%= stylesheet_link_tag "review", media: "all", "data-turbo-track": "reload" %>

<div id="flash-messages" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
  <% flash.each do |key, message| %>
    <div class="alert alert-<%= key == "notice" ? "success" : "danger" %> alert-dismissible fade show" role="alert">
      <%= message %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% end %>
</div>

<div class="review-form-container">
  <%= form_with model: @review, local: true, data: { turbo: false } do |f| %>
    <%= f.hidden_field :reviewer_id, value: current_user.id %>
    <%= f.hidden_field :reviewee_id, value: @reviewee.id %>
    <%= f.hidden_field :project_id, value: @project.id %>

    <%= f.label :ratings, "Rating (1-5)", class: "form-label fw-bold" %>
    <div class="star-rating" id="star-rating">
      <% 1.upto(5) do |i| %>
        <span class="star" data-value="<%= i %>">&#9733;</span>
      <% end %>
    </div>
    <%= f.hidden_field :ratings, id: "rating-value", required: true %>

    <%= f.label :review, "Your Review", class: "form-label fw-bold mt-3" %>
    <%= f.text_area :review, class: "form-control", rows: 4, placeholder: "Write your review...", required: true %>

    <%= f.submit "Submit Review", class: "btn btn-primary mt-3" %>
  <% end %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Auto-dismiss flash alert
    const alert = document.querySelector('.alert');
    if (alert) {
      setTimeout(() => {
        alert.classList.remove("show");
        alert.classList.add("fade");
        alert.remove();
      }, 3000);
    }

    // Star rating interaction
    const stars = document.querySelectorAll('#star-rating .star');
    const ratingInput = document.getElementById('rating-value');

    stars.forEach((star) => {
      star.addEventListener('click', () => {
        const rating = star.dataset.value;
        ratingInput.value = rating;

        stars.forEach(s => {
          s.classList.toggle('selected', s.dataset.value <= rating);
        });
      });

      star.addEventListener('mouseover', () => {
        stars.forEach(s => {
          s.classList.remove('hover');
          if (s.dataset.value >= star.dataset.value) {
            s.classList.add('hover');
          }
        });
      });

      star.addEventListener('mouseout', () => {
        stars.forEach(s => s.classList.remove('hover'));
      });
    });
  });
</script>

<style>
.star-rating {
  display: flex;
  flex-direction: row;
  justify-content: flex-start
  gap: 5px;
  font-size: 2rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.star-rating .star.selected {
  color: #f5c518; /* gold */
}

.star-rating .star.selected,
.star-rating .star:hover{
  color: #f5c518; /* gold */
}
.star-rating .star {
  color: #ddd;
  transition: color 0.3s;
  cursor: pointer;
}

</style>