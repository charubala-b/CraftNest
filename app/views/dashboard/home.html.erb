<meta name="current-user-id" content="<%= current_user.id %>">
<meta name="csrf-token" content="<%= form_authenticity_token %>">

<%= stylesheet_link_tag "dashboard", media: "all", "data-turbo-track": "reload" %>

<!-- Flash Messages -->
<div id="flash-messages" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
  <% flash.each do |key, message| %>
    <div class="alert alert-<%= key == "notice" ? "success" : "danger" %> alert-dismissible fade show" role="alert">
      <%= message %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% end %>
</div>

<%= javascript_include_tag "https://cdn.jsdelivr.net/npm/sweetalert2@11" %>
  <h4 style="margin-left: 35px; padding: 15px;"><i> Welcome <%= current_user.name %>![Client]<i></h4>
<div class="dashboard-container">
  <!-- Projects Tab -->
  <div id="projects" class="tab-content" style="display: block;">
    <h2 class="section-title">My Projects</h2>
    <%= link_to 'Post New Project', new_project_path, class: 'btn btn-primary' %>

    <% if @active_projects.present? %>
      <% @active_projects.ordered_by_deadline.each do |project| %>
        <div class="project-card" style="background: #f0f5fb;">
          <h3><%= project.title %></h3>
          <p><%= project.description %></p>
          <p><strong>Budget:</strong> ₹<%= project.budget %></p>
          <p><strong>Deadline:</strong> <%= project.deadline.strftime("%d %b %Y") %></p>
          <p><strong>Required Skills:</strong>
            <% if project.skills.any? %>
              <%= project.skills.map { |s| s.skill_name.humanize }.join(', ') %>
            <% else %>
              <span class="text-muted">None</span>
            <% end %>
          </p>

          <!-- Edit/Delete Project -->
          <%= link_to 'Edit', edit_project_path(project), class: "btn btn-warn" %>
          <%= button_to 'Delete', project_path(project), method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-dan" %>

          <!-- 🔹 Bids Section -->
          <h4>Bids</h4>
          <% if project.bids.any? %>
            <% accepted_bid = project.bids.find_by(accepted: true) %>
            <% project.bids.ordered_by_price_asc.each do |bid| %>
              <div class="bid-card <%= 'accepted-card' if bid.accepted? %>">
                <%= link_to "📈 View #{bid.user.name} Analytics", freelancer_analytics_path(bid.user_id), class: "btn btn-info" %>
                <p><strong>Freelancer:</strong> <%= bid.user.name %></p>

                <% if bid.user.skills.any? %>
                  <p><strong>Skills:</strong> <%= bid.user.skills.map(&:skill_name).join(", ") %></p>
                <% else %>
                  <p><strong>Skills:</strong> <span class="text-muted">No skills listed</span></p>
                <% end %>

                <p><strong>cover_letter:</strong> <%= bid.cover_letter %></p>
                <p><strong>₹:</strong> <%= bid.proposed_price %></p>

                <% if bid.accepted? %>
                  <button class="btn btn-secondary" disabled>Accepted</button>
                <% elsif accepted_bid.present? %>
                  <button class="btn btn-outline-secondary" disabled>Not Accepted</button>
                <% else %>
                  <%= button_to "Accept Bid", accept_bid_path(bid), method: :post, 
                    class: "btn btn-success accept-bid-btn", 
                    data: { bid_id: bid.id, confirm: "Accept this bid?" }, 
                    onclick: "showSpinner()" %>
                <% end %>
              </div>
            <% end %>
          <% else %>
            <p class="text-muted">No bids requested.</p>
          <% end %>

          <!-- 🔹 Comments Toggle -->
          <button onclick="toggleComments('comments-<%= project.id %>', this)">▶</button> Show Comments
          <div id="comments-<%= project.id %>" style="display: none; margin-top: 10px;">
          <% if project.comments.any? %>
            <% project.comments.where(parent_id: nil).each do |comment| %>
              <div class="comment-block">
                <p><strong><%= comment.user.name %>:</strong> <%= comment.body %></p>
                <button onclick="toggleReplyForm(<%= comment.id %>)" class="btn btn-sm btn-light">Reply</button>
                <div id="reply-form-<%= comment.id %>" style="display: none;">
                  <%= form_with model: [project, Comment.new], local: true, data: { turbo: false } do |f| %>
                    <%= f.hidden_field :parent_id, value: comment.id %>
                    <%= f.text_area :body, rows: 2, class: "form-control", placeholder: "Write your reply..." %>
                    <%= f.submit "Reply", class: "btn btn-sm btn-primary mt-1" %>
                  <% end %>
                </div>
                <% comment.replies.each do |reply| %>
                  <div class="reply" style="margin-left: 20px;">
                    <p><strong><%= reply.user.name %>:</strong> <em>@<%= comment.user.name %></em> - <%= reply.body %></p>
                    <%= button_to 'Delete', comment_path(reply), method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-sm btn-danger" %>
                  </div>
                <% end %>
                <%= button_to 'Delete', comment_path(comment), method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-sm btn-danger mt-1" %>
              </div>
            <% end %>
          <% else %>
            <p class="text-muted">No comments yet.</p>
          <% end %>
          </div>
        </div>
      <% end %>
    <% else %>
        <p>No active projects.</p>
    <% end %>
    <!-- your project content -->
  </div>

  <!-- Contracts Tab -->
  <div id="contracts" class="tab-content">
  <h2 class="section-title">My Contracts</h2>
    <% @contracts.each do |contract| %>
      <div class="<%= contract.completed? ? 'contract-card' : (contract.end_date < Date.today ? 'red-card' : 'water-card') %>"
     style="background: <%= contract.completed? ? '#d1f7dc' : (contract.end_date < Date.today ? '#f7b7b7' : '#f0f5fb') %>; 
            border-left: 5px solid <%= contract.completed? ? '#4caf50' : (contract.end_date < Date.today ? '#f22e14' : '#2196f3') %>;">
        <% unless contract.completed? || contract.end_date < Date.today %>
          <% if contract.start_date.present? && contract.end_date.present? %>
            <% start_date = contract.start_date.to_date rescue nil %>
            <% end_date = contract.end_date.to_date rescue nil %>

            <% if start_date && end_date %>
              <% total_seconds = (end_date.to_time - start_date.to_time).to_i %>
              <% elapsed_seconds = [(Time.current - start_date.to_time).to_i, 0].max %>
              <% progress_percent = total_seconds > 0 ? [(elapsed_seconds * 100) / total_seconds, 100].min : 0 %>

                <div class="wave-container" style="--progress:<%= progress_percent %>%;">
                  <div class="wave wave1"></div>
                  <div class="wave wave2"></div>
                </div>
                <div class="progress-label">
                <p><strong>Project:</strong> <%= contract.project.title %></p>
                <p><strong>Freelancer:</strong> <%= contract.freelancer.name %></p>
                <p><strong>Status:</strong> <%= contract.status.humanize %></p>
                <%= form_with url: contract_path(contract), method: :patch, local: true, data: { turbo: false } do |f| %>
                  <%= hidden_field_tag "contract[status]", "completed" %>
                  <%= f.submit "Mark Complete", class: "btn btn-warning", data: { confirm: "Are you sure?" } %>
                <% end %>
                <%= progress_percent %>% Complete</div>
            <% end %>
          <% end %>
        <% end %>
        <% if !contract.completed? && contract.end_date < Date.today %>
        
          <p><strong>Project:</strong> <%= contract.project.title %></p>
          <p><strong>Freelancer:</strong> <%= contract.freelancer.name %></p>
          <p><strong>Status:</strong> <%= contract.status.humanize %></p>
          <p style="color: red; font-weight: bold;">Deadline has ended.</p>
          <%= form_with url: contract_path(contract), method: :patch, local: true, data: { turbo: false } do |f| %>
            <%= hidden_field_tag "contract[status]", "completed" %>
            <%= f.submit "Mark Complete", class: "btn btn-warning", data: { confirm: "Are you sure?" } %>
          <% end %>
          
        <% end %>
        <% if contract.completed? %>
          <p><strong>Project:</strong> <%= contract.project.title %></p>
          <p><strong>Freelancer:</strong> <%= contract.freelancer.name %></p>
          <p><strong>Status:</strong> <%= contract.status.humanize %></p>
          <div class="review-section">
            <!-- Client Review -->
            <h5>Client's Review for Freelancer</h5>
            <% client_review = contract.project.reviews.find_by(reviewer_id: contract.client_id) %>
            <% if client_review.present? %>
              <div class="review-card" style="border-left: 5px solid <%= contract.completed? ? '#4caf50' : '#2196f3' %>;">
                <em><p>
                  <% filled_stars = '⭐' * client_review.ratings %>
                  <% empty_stars = '☆' * (5 - client_review.ratings) %>
                  <%= filled_stars + empty_stars %> - <%= client_review.review %>
                </p></em>
              </div>
            <% else %>
              <%= link_to "Write Review for freelancer", new_review_path(reviewee_id: contract.freelancer_id, project_id: contract.project_id), class: "btn btn-warning" %>
            <% end %>

            <!-- Freelancer Review -->
            <h5>Freelancer's Review for Client</h5>
            <% freelancer_review = contract.project.reviews.find_by(reviewer_id: contract.freelancer_id) %>
            <% if freelancer_review.present? %>
              <div class="review-card" style="border-left: 5px solid <%= contract.completed? ? '#4caf50' : '#2196f3' %>;">
                <em><p>
                  <% filled_stars = '⭐' * freelancer_review.ratings %>
                  <% empty_stars = '☆' * (5 - freelancer_review.ratings) %>
                  <%= filled_stars + empty_stars %> - <%= freelancer_review.review %>
                </p></em>
              </div>

            <% else %>
              <% if current_user.id == contract.freelancer_id %>
                <div id="freelancer-review-section-<%= contract.id %>" 
                  data-reviewee-id="<%= contract.client_id %>" 
                  data-project-id="<%= contract.project_id %>" 
                  data-reviewer-id="<%= current_user.id %>"></div>
              <% else %>
                <p>No review has been given yet.</p>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>

  <!-- Messages Tab -->
  <div id="messages" class="tab-content">
  <h2 class="section-title">My Chats</h2>
    <div class="chat-list">
      <% @contracts.each do |contract| %>
        <% if contract.client_id == current_user.id %>
          <div class="chat-link-card">
            <%= link_to chat_room_path(contract.freelancer_id, contract.project_id), class: "chat-link-button" do %>
              💬 <strong><%= contract.freelancer.name %></strong> on <em><%= contract.project.title %></em>
            <% end %>
          </div>
        <% end %>
      <% end %>
    </div>
    <!-- your messages -->
  </div>

  <!-- Completed Projects Tab -->
  <div id="completed_projects" class="tab-content">
  <h2 class="section-title">My Completed Projects</h2>
    <% @completed_projects.each do |project| %>
      <div class="project-card completed-card" style="background: #f0f5fb;">
        <h3><%= project.title %></h3>
        <p><%= project.description %></p>
        <p><strong>Budget:</strong> ₹<%= project.budget %></p>
        <p><strong>Deadline:</strong> <%= project.deadline.strftime("%d %b %Y") %></p>
      </div>
    <% end %>
  </div>
</div>

<!-- JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function openTab(evt, tabId) {
    document.querySelectorAll(".tab-content").forEach(el => el.style.display = "none");
    document.querySelectorAll(".tab-button").forEach(el => el.classList.remove("active"));
    document.getElementById(tabId).style.display = "block";
    evt.currentTarget.classList.add("active");
  }

  function submitReview(e, projectId, revieweeId) {
    e.preventDefault();
    const form = e.target;
    const messageEl = form.nextElementSibling;
    const ratings = form.ratings.value;
    const reviewText = form.review.value;

    form.querySelector("button").disabled = true;

    fetch('/api/v1/reviews', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({
        review: {
          ratings: ratings,
          review: reviewText,
          project_id: projectId,
          reviewee_id: revieweeId
        }
      })
    })
    .then(res => {
      if (!res.ok) {
        return res.json().then(data => Promise.reject(data));
      }
      return res.json();
    })
    .then(() => {
      const flashDiv = document.getElementById('flash-messages');
      if (flashDiv) {
        flashDiv.innerHTML = `
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            Review submitted successfully!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `;
      }
      setTimeout(() => location.reload(), 1200);
    })
    .catch(err => {
      const errorMessage = err.errors ? err.errors.join(', ') : err.message || 'Something went wrong';
      messageEl.innerHTML = `<p style="color:red;">${errorMessage}</p>`;
      form.querySelector("button").disabled = false;
    });
  }

  function toggleComments(id, button) {
    const section = document.getElementById(id);
    const isVisible = section.style.display === "block";
    section.style.display = isVisible ? "none" : "block";
    button.textContent = isVisible ? "▶" : "▼";
  }

  function toggleReplyForm(commentId) {
    const form = document.getElementById(`reply-form-${commentId}`);
    form.style.display = (form.style.display === "none" || !form.style.display) ? "block" : "none";
  }

  function showSpinner() {
    const spinner = document.getElementById("spinner-overlay");
    if (spinner) spinner.style.display = "flex";
  }

  function hideSpinner() {
    const spinner = document.getElementById("spinner-overlay");
    if (spinner) spinner.style.display = "none";
  }

  document.addEventListener("DOMContentLoaded", () => {
    // Load reviews or show form (session-based)
    document.querySelectorAll("[id^='client-review-section-'], [id^='freelancer-review-section-']").forEach(section => {
      const projectId = section.dataset.projectId;
      const reviewerId = section.dataset.reviewerId;
      const revieweeId = section.dataset.revieweeId;

      fetch(`/api/v1/reviews/${projectId}`, {
        method: 'GET'
      })
      .then(res => {
        if (!res.ok) {
          return res.json().then(data => Promise.reject(data));
        }
        return res.json();
      })
      .then(data => {
        if (data && data.id) {
          section.innerHTML = `
            <div class="review-card">
              <p>⭐ ${data.ratings} - ${data.review}</p>
              <p><em>by you</em></p>
            </div>
          `;
        } else if (data.error === "Review not found") {
          section.innerHTML = `
            <form onsubmit="submitReview(event, ${projectId}, ${revieweeId})">
              <label>Rating (1-5):</label>
              <input type="number" name="ratings" min="1" max="5" required><br>
              <label>Review:</label>
              <textarea name="review" minlength="10" maxlength="100" required></textarea><br>
              <button type="submit" class="btn btn-sm btn-warning">Submit Review</button>
            </form>
            <div class="review-message"></div>
          `;
        } else {
          section.innerHTML = `<p style="color:red;">Unable to load review or form.</p>`;
        }
      })
      .catch(() => {
        section.innerHTML = `<p style="color:red;">Failed to load review.</p>`;
      });
    });

    // Auto-dismiss alerts
    const alert = document.querySelector('.alert');
    if (alert) {
      setTimeout(() => {
        alert.classList.remove("show");
        alert.classList.add("fade");
        alert.remove();
      }, 3000);
    }

    // Set wave widths
    document.querySelectorAll('.wave-container').forEach(container => {
      const progress = container.style.getPropertyValue('--progress');
      container.style.width = progress;
    });

    // Animate progress bars
    document.querySelectorAll('.progress-water-fill').forEach(bar => {
      const width = bar.style.width;
      bar.style.width = '0%';
      setTimeout(() => {
        bar.style.width = width;
      }, 100);
    });
  });
</script>


<style>
  .spinner-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(255, 255, 255, 0.6);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }

  .spinner {
    width: 50px;
    height: 50px;
    border: 6px solid #e0e0e0;
    border-top: 6px solid #3498db;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  .water-card {
  position: relative;
  width: 100%;
  max-width: 1300px;
  height: 200px;
  background-color: #e0f7fa;
  border-radius: 20px;
  overflow: hidden;
  margin-bottom: 20px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  opacity: 0.9;
  transition: background-color 0.3s ease;
  padding: 20px;
}

.wave-container {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 100%;
  width: var(--progress);
  background: #4dd0e1;
  overflow: hidden;
  border-radius: 20px 0 0 20px;
  transition: width 1s ease-in-out;
}

.wave {
  position: absolute;
  width: 200%;
  height: 200%;
  top: -100%;
  background: url("data:image/svg+xml;utf8,\
    <svg viewBox='0 0 120 28' xmlns='http://www.w3.org/2000/svg'>\
      <path fill='%23ffffff' fill-opacity='0.6' d='M0,20 C30,10 90,30 120,20 L120,30 L0,30 Z'></path>\
    </svg>") repeat-x;
  background-size: 50% 100%;
  animation: waveMove 4s linear infinite;
  opacity: 0.6;
}

.wave.wave2 {
  top: -90%;
  animation-delay: -2s;
  opacity: 0.4;
}

@keyframes waveMove {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-50%);
  }
}

.progress-label {
  position: absolute;
  bottom: 10px;
  left: 10px;
  font-weight: bold;
  color: #004d40;
  z-index: 2;
  padding: 5px 10px;
}

.red-card {
  padding: 24px;
  margin-bottom: 24px;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.04);
  transition: box-shadow 0.3s ease;
}

</style>
